[tool.poetry]
name = "honeyquest"
version = "0.1.0"
license = "Apache-2.0"
repository = "https://github.com/dynatrace-oss/honeyquest"
description = "Honeyquest tasks humans to distinguish neutral, risky, and deceptive payloads"
authors = ["Mario Kahlhofer <mario.kahlhofer@dynatrace.com>"]

[tool.poetry.dependencies]
python = "~3.10"
typer = "^0.12.3"
loguru = "^0.7.2"
dagster = "^0.14.20"
dagit = "^0.14.20"
ipykernel = "^6.29.5"
pydantic = "^2.8.2"
pydantic-settings = "^2.3.4"
PyYAML = "^6.0.1"
mistune = "^3.0.2"
fastapi = "^0.111.1"
boto3 = {extras = ["crt"], version = "^1.34.149"}
# we don't care about the exact version of transitive dependencies,
# instead we are happy with whatever version the other packages require
requests = "*"
python-dotenv = "*"
# pin this dependency for session support in fastapi
itsdangerous = "^1.1.0"
# pin these dependencies to avoid a conflict with dagster
sqlalchemy = "^1.4.44"
pendulum = "^2.1.2"
lxml = "5.1.1"

[tool.poetry.scripts]
honeyquest = "honeyquest.__main__:app"

[tool.poetry.group.hooks]
optional = true

[tool.poetry.group.hooks.dependencies]
black = "*"
flake8 = "*"
flake8-docstrings = "*"
flake8-rst-docstrings = "*"
pylint = "*"
isort = "*"
mypy = "*"
pre-commit = "*"
# typing stubs for mypy (must match types of dependencies)
boto3-stubs = {extras = ["essential"], version = "^1.34"}
pandas-stubs = "^1.5"
types-cffi = "^1.16"
types-colorama = "^0.4"
types-croniter = "^2.0"
types-decorator = "^5.1"
types-jsonschema = "^4.23"
types-protobuf = "^3.20"
types-psutil = "^6.0"
types-Pygments = "^2.18"
types-python-dateutil = "^2.9"
types-pytz = "^2024"
types-pywin32 = "^306"
types-PyYAML = "^6.0"
types-requests = "^2.32"
types-setuptools = "^72.1"
types-six = "^1.16"
types-toposort = "^1.10"
types-tqdm = "^4.66"

[tool.poetry.group.analytics]
optional = true

[tool.poetry.group.analytics.dependencies]
matplotlib = "^3.9.1"
pandas = "^1.5.3"
scipy = "^1.14.0"
seaborn = "^0.13.2"
ipywidgets = "^8.1.3"
rpy2 = "^3.5.16"
pylatex = "^1.4.2"
# pin this dependency to avoid a conflict with pandas
numpy = "^1.26.4"

[tool.poetry.group.docker]
optional = true

[tool.poetry.group.docker.dependencies]
circus = "*"

[tool.black]
line-length = 100

[tool.isort]
profile = "black"

[tool.pylint.main]
load-plugins = "pylint.extensions.docparams"
disable = [
    "fixme",
    "duplicate-code",
    "use-dict-literal",
    "broad-exception-caught",
    "logging-fstring-interpolation",
    "protected-access",
    "consider-using-with",
    "too-many-arguments",
    "too-many-statements",
    "too-many-locals",
    "too-few-public-methods",
    "missing-function-docstring",
    "missing-module-docstring",
    "wrong-import-order" # covered by isort
]

[tool.pylint.parameter_documentation]
default-docstring-type = "sphinx"

[tool.mypy]
plugins = ["pydantic.mypy", "numpy.typing.mypy_plugin"]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
    "circus",
    "cycler",
    "IPython.*",
    "ipywidgets",
    "matplotlib.*",
    "mistune.*",
    "rpy2.*",
    "scipy.*",
    "seaborn",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
